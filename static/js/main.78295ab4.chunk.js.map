{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","startFilter","query","status","all","filterReducer","filter","todos","todosReducer","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoList","dispatch","useState","visiblesTodos","setVisiblesTodos","useEffect","filteredTodos","title","toLowerCase","includes","active","completed","length","className","map","id","onClick","currentTodoActions","selectTodo","TodoFilter","onSubmit","event","preventDefault","value","onChange","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","loading","setLoading","user","setUser","loadUser","a","loadedUser","Error","href","email","name","App","loadTodos","loadedTodos","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78295ab4.chunk.js","sourcesContent":["export enum Status {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype AddQueryAction = {\n  type: 'query/ADD';\n  payload: string;\n};\n\nconst addQuery = (query: string): AddQueryAction => ({\n  type: 'query/ADD',\n  payload: query,\n});\n\ntype DeleteQueryAction = {\n  type: 'query/DELETE';\n};\n\nconst deleteQuery = (): DeleteQueryAction => ({ type: 'query/DELETE' });\n\ntype SetStatus = {\n  type: 'status/SET';\n  payload: Status;\n};\n\nconst setStatus = (status: Status):SetStatus => ({\n  type: 'status/SET',\n  payload: status,\n});\n\ntype Actions = AddQueryAction\n| DeleteQueryAction\n| SetStatus;\n\ntype Filter = {\n  query: string,\n  status: Status\n};\n\nconst startFilter: Filter = { query: '', status: Status.all };\n\nconst filterReducer\n  = (filter: Filter = startFilter, action: Actions): Filter => {\n    switch (action.type) {\n      case 'query/ADD':\n        return {\n          ...filter,\n          query: action.payload,\n        };\n\n      case 'query/DELETE':\n        return {\n          ...filter,\n          query: '',\n        };\n\n      case 'status/SET':\n        return {\n          ...filter,\n          status: action.payload,\n        };\n\n      default:\n        return filter;\n    }\n  };\n\nexport const action = { addQuery, deleteQuery, setStatus };\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddAction = {\n  type: 'todos/ADD';\n  payload: Todo[];\n};\n\nconst add = (todos: Todo[]): AddAction => ({\n  type: 'todos/ADD',\n  payload: todos,\n});\n\ntype Action = AddAction;\n\nexport const actions = add;\n\nconst todosReducer = (todos: Todo[] = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todos/ADD':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Status } from '../../types/Status';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n\n  const dispatch = useDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const filter = useAppSelector(state => state.filter);\n\n  const { query, status } = filter;\n\n  const [visiblesTodos, setVisiblesTodos] = useState(todos);\n\n  const selectTodo = (todo: Todo) => {\n    dispatch(currentTodoActions.setTodo(todo));\n  };\n\n  useEffect(() => {\n    const filteredTodos = todos\n      .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()))\n      .filter(todo => {\n        switch (status) {\n          case Status.active:\n            return !todo.completed;\n\n          case Status.completed:\n            return todo.completed;\n\n          default:\n            return todo;\n        }\n      });\n\n    setVisiblesTodos(filteredTodos);\n  }, [status, query]);\n\n  return (\n    <>\n      {(visiblesTodos.length === 0 && (status.length > 0 || query !== Status.all)) ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {visiblesTodos.map(todo => {\n              const { id, title, completed } = todo;\n\n              return (\n                <tr\n                  data-cy=\"todo\"\n                  className={(currentTodo && id === currentTodo.id)\n                    ? 'has-background-info-light'\n                    : ''}\n                  key={id}\n                >\n                  <td className=\"is-vcentered\">{id}</td>\n                  {completed ? (\n                    <td className=\"is-vcentered\">\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    </td>\n                  ) : (\n                    <td className=\"is-vcentered\" />\n                  )}\n\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className={completed\n                      ? 'has-text-success'\n                      : 'has-text-danger'}\n                    >\n                      {title}\n                    </p>\n                  </td>\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => selectTodo(todo)}\n                    >\n                      <span className=\"icon\">\n                        <i className={\n                          (currentTodo && id !== currentTodo.id) || !currentTodo\n                            ? 'far fa-eye'\n                            : 'far fa-eye-slash'\n                        }\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { action } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const filter = useAppSelector(state => state.filter);\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    dispatch(action.setStatus(value as Status));\n  };\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    dispatch(action.addQuery(value));\n  };\n\n  const cleanSearch = () => {\n    dispatch(action.deleteQuery());\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.status}\n            onChange={handleSelect}\n          >\n            <option value={Status.all}>All</option>\n            <option value={Status.active}>Active</option>\n            <option value={Status.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.query}\n          onChange={handleSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {filter.query.length > 0 && (\n            <button\n              aria-label=\"Mute volume\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={cleanSearch}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from '../../api';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = currentTodo as Todo;\n\n  const loadUser = async () => {\n    setLoading(true);\n\n    try {\n      const loadedUser = await getUser(userId);\n\n      setUser(loadedUser);\n      setLoading(false);\n    } catch {\n      throw new Error('error');\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  const deleteSelectedTodo = () => {\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              aria-label=\"Mute volume\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => deleteSelectedTodo()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n              {' by '}\n\n              {user && (\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              )}\n\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n\n  const dispatch = useDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const loadTodos = async () => {\n    setLoading(true);\n\n    try {\n      const loadedTodos = await getTodos();\n\n      dispatch(todosActions(loadedTodos));\n      setLoading(false);\n    } catch (error) {\n      throw new Error('error');\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            {loading && <Loader />}\n            {todos.length > 0 && (\n              <>\n                <h1 className=\"title\">Todos:</h1>\n                <div className=\"block\">\n                  <TodoFilter />\n                </div>\n                <div className=\"block\">\n\n                  <TodoList />\n                </div>\n              </>\n            )}\n\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}